@use 'sass:map';
@use 'sass:color';
@use 'styles/functions' as fn;
@use 'styles/config' as cfg;
@use 'styles/themes' as tm;

// Media
@mixin mobile {
  @media only screen and (max-width: ((cfg.$tablet - 1) * 1px)) {
    @content;
  }
}

@mixin tablet {
  @media only screen and (min-width: ((cfg.$tablet - 1) * 1px)) {
    @content;
  }
}

@mixin desktop {
  @media only screen and (min-width: ((cfg.$desktop - 1) * 1px)) {
    @content;
  }
}

@mixin wide-screen {
  @media only screen and (min-width: ((cfg.$wide-screen + 1) * 1px)) {
    @content;
  }
}

// Theme
@mixin themify($property, $theme-color, $adjust: false, $level: 0%) {
  @each $theme-name in cfg.$theme-names {
    html.theme-#{$theme-name} & {
      @if $adjust == 'blackness' {
        #{$property}: color.adjust(
          fn.get-theme-color($theme-name, $theme-color),
          $blackness: $level
        );
      } @else if $adjust == 'lightness' {
        #{$property}: color.adjust(
          fn.get-theme-color($theme-name, $theme-color),
          $lightness: $level
        );
      } @else {
        #{$property}: fn.get-theme-color($theme-name, $theme-color);
      }
    }
  }
}

@mixin in-theme($theme-name) {
  html.theme-#{$theme-name} & {
    @content;
  }
}

// Typography
@mixin set-font($size, $line-height: false) {
  font-size: $size;

  @if $line-height {
    line-height: $line-height;
  }
}

@mixin text($color, $weight: 400) {
  @include themify('color', $color);

  font-weight: map-get(cfg.$font-weights, $weight);
}

@mixin line-clamp($lines: false) {
  display: -webkit-box;
  overflow: hidden;

  @if $lines {
    -webkit-line-clamp: calc(1 * $lines);
  } @else {
    -webkit-line-clamp: calc(1);
  }

  -webkit-box-orient: vertical;
}
